version: "3.8"
services:
  stirling-pdf:
    image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest
    container_name: stirling-pdf
    ports:
      - '8181:8080'
    volumes:
      - ./StirlingPDF/trainingData:/usr/share/tessdata
      - ./StirlingPDF/extraConfigs:/configs
      - ./StirlingPDF/customFiles:/customFiles/
      - ./StirlingPDF/logs:/logs/W
      - ./StirlingPDF/pipeline:/pipeline/
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - LANGS=en_GB
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pdf.rule=Host(`pdf.home`)"
      - homepage.group=Documents
      - homepage.name=Stirling PDF
      - homepage.icon=https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/stirling-pdf.svg
      - homepage.href=http://pdf.home
    networks:
      - tools_net
      - core_net

  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PASSWORD=yourpassword
      - GUAC_USER=abc
    volumes:
      - ./calibre/config:/config
      - ./calibre/books:/books
    ports:
      - 8084:8080
      - 8085:8081
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calibre-desktop.rule=Host(`calibre-desktop.home`)"
      - homepage.group=Calibre
      - homepage.name=Calibre Desktop
      - homepage.icon=https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/calibre.svg
      - homepage.href=http://calibre-desktop.home
    networks:
      - tools_net
      - core_net

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-calibre
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
    volumes:
      - ./calibre/config:/config
      - ./calibre/books:/books
    ports:
      - 8083:8083
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calibre.rule=Host(`calibre.home`)"
      - homepage.group=Calibre
      - homepage.name=Calibre Web
      - homepage.icon=https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/svg/calibre-web.svg
      - homepage.href=http://calibre.home
    networks:
      - tools_net
      - core_net

  calibre-web-automated-book-downloader:
    image: ghcr.io/calibrain/calibre-web-automated-book-downloader:latest
    container_name: calibre-downloader
    environment:
      - FLASK_PORT=8086
      - LOG_LEVEL=info
      - BOOK_LANGUAGE=en
      - USE_BOOK_TITLE=true
      - TZ=${TZ}
      - APP_ENV=prod
      - UID=${PUID}
      - GID=${PGID}
      - CUSTOM_SCRIPT=/scripts/process-book.sh
    ports:
      - 8086:8086
    volumes:
      - ./calibre/books:/cwa-book-ingest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calibre-downloader.rule=Host(`calibre-downloader.home`)"
      - homepage.group=Calibre
      - homepage.name=Calibre Downloader
      - homepage.icon=https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/png/calibre-web-automated-book-downloader.png
      - homepage.href=http://calibre-downloader.home
    networks:
      - tools_net
      - core_net

  paperless-broker:
    image: docker.io/library/redis:7
    container_name: paperless-redis
    restart: unless-stopped
    volumes:
      - ./paperless/config/redis:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - tools_net
      - core_net

  paperless-db:
    image: docker.io/library/postgres:17
    container_name: paperless-postgres
    restart: unless-stopped
    volumes:
      - ./paperless/config/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=paperless
      - POSTGRES_USER=paperless
      - POSTGRES_PASSWORD=paperless
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - tools_net
      - core_net

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    restart: unless-stopped
    depends_on:
      - paperless-db
      - paperless-broker
    volumes:
      - ./paperless/config/app:/usr/src/paperless/data
      - ./paperless/config/media:/usr/src/paperless/media
      - /mnt/homelab/tools/paperless/export:/usr/src/paperless/export
      - /mnt/homelab/tools/paperless/consume:/usr/src/paperless/consume
    environment:
      - PAPERLESS_REDIS=redis://paperless-broker:6379
      - PAPERLESS_DBHOST=paperless-db
      - PAPERLESS_TIME_ZONE=${TZ}
      - PAPERLESS_OCR_LANGUAGE=eng
      - PAPERLESS_ADMIN_USER=admin
      - PAPERLESS_ADMIN_PASSWORD=admin
      - USERMAP_UID=${PUID}
      - USERMAP_GID=${PGID}
      - PAPERLESS_URL=http://paperless.home
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.rule=Host(`paperless.home`)"
      - homepage.group=Documents
      - homepage.name=Paperless
      - homepage.icon=paperless-ngx
      - homepage.href=http://paperless.home
    networks:
      - tools_net
      - core_net

  firefly-app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly_iii_core
    restart: always
    volumes:
      - ./firefly/upload:/var/www/html/storage/upload
    env_file: ./firefly/.env
    ports:
      - 8087:8080
    depends_on:
      - firefly-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firefly.rule=Host(`firefly.home`)"
      - homepage.group=Finance
      - homepage.name=Firefly III
      - homepage.icon=firefly-iii
      - homepage.href=http://firefly.home
    networks:
      - tools_net
      - core_net

  firefly-db:
    image: mariadb:lts
    hostname: db
    container_name: firefly_iii_db
    restart: always
    env_file: ./firefly/.db.env
    volumes:
      - ./firefly/db:/var/lib/mysql
    networks:
      - tools_net
      - core_net

  firefly-cron:
    image: alpine
    restart: always
    container_name: firefly_iii_cron
    env_file: ./firefly/.env
    command: sh -c "
      apk add tzdata
      && ln -s /usr/share/zoneinfo/${TZ} /etc/localtime
      | echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/REPLACEME;echo\" 
      | crontab - 
      && crond -f -L /dev/stdout"
    networks:
      - tools_net
      - core_net

networks:
  tools_net:
    name: tools_net
  core_net:
    external: true
